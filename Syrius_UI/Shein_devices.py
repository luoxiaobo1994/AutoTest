# -*- coding:utf-8 -*-
# Author: luoxiaobo
# TIME: 2022/1/4 20:11
import os
from base.common import get_devices
from utils.connect_linux import ssh
from multiprocessing.dummy import Pool

devices = {
    '10.111.150.121': '10.111.150.12',  # 421
    '10.111.150.117': '10.111.150.14',  # 417
    '10.111.150.125': '10.111.150.17',  # 425  # 连不上.
    '10.111.150.108': '10.111.150.19',  # 408
    '10.111.150.111': '10.111.150.20',  # 411
    '10.111.150.104': '10.111.150.22',  # 404
    '10.111.150.106': '10.111.150.23',  # 406
    '10.111.150.102': '10.111.150.24',  # 402
    '10.111.150.216': '10.111.150.29',  # 516
    '10.111.150.208': '10.111.150.30',  # 508 参数总是有点问题
    '10.111.150.202': '10.111.150.31',  # 502
    '10.111.150.209': '10.111.150.32',  # 509
    '10.111.150.203': '10.111.150.33',  # 503
    '10.111.150.212': '10.111.150.34',  # 512
    '10.111.150.207': '10.111.150.35',  # 507
    '10.111.150.195': '10.111.150.36',  # 495
    '10.111.150.201': '10.111.150.37',  # 501
    '10.111.150.211': '10.111.150.38',  # 511
    '10.111.150.205': '10.111.150.39',  # 505  # 连不上
    '10.111.150.193': '10.111.150.40',  # 493
    '10.111.150.213': '10.111.150.41',  # 513
    '10.111.150.210': '10.111.150.42',  # 510
    '10.111.150.204': '10.111.150.43',  # 504  # 连不上.
    '10.111.150.206': '10.111.150.44',  # 506
    '10.111.150.214': '10.111.150.45',  # 514
    '10.111.150.215': '10.111.150.46',  # 515
}


def all_connect(ip):
    cmds = ['adb devices', "adb tcpip 5555"]  # 连上机器人需要执行的命令。
    # for i in devices.keys():
    res = ssh(ip=ip, cmds=cmds)  # 正常返回成功与否..
    if res:
        info = os.popen(f"adb connect {devices[ip]}").readlines()  # 连接对应的平板.
        print(info[0])
    else:
        print(f"设备:{ip},连接失败!!!")

    # print(f"共连接成功:{len(get_devices())}个设备.")  # 多线程会重复打印.


def is_alive(ip):
    # 只是调试设备是否开启.并打开tcpip端口.
    num = 0
    # cmds = ["adb devices", "adb tcpip 5555"]  # 连上机器人需要执行的命令。
    # for i in devices.keys():
    x = ssh(ip=ip, cmds='')
    if x:
        num += 1
    # print(f"共{num}个机器人已经启动.")


def just_adb(i):
    # for i in devices.values():
    os.system(f"adb connect {i}")


if __name__ == '__main__':
    pool = Pool(10)
    pool.map(all_connect, devices.keys())  # 连接希音场地上电的机器人,打开它对应平板的TcpIP端口.
    # pool.map(is_alive, devices.keys())  # 只是查看有多少个设备上电了.
    # pool.map(just_adb, devices.values())  # 只是连接机器人平板.
    # print(len(get_devices()))  # 查看我的电脑连接了几个机器人平板.
