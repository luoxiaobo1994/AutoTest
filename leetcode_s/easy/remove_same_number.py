# -*- coding:utf-8 -*-
# Author: luoxiaobo
# TIME: 2022/5/11 14:11
# Desc: 一个升序的数组,删除重复的数值.返回删除后的数组长度和新的数组

"""
输入：nums = [0,0,1,1,1,2,2,3,3,4]
输出：5, nums = [0,1,2,3,4]
解释：函数应该返回新的长度 5 ， 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4 。不需要考虑数组中超出新长度后面的元素。

输入：nums = [1,1,2]
输出：2, nums = [1,2,_]
解释：函数应该返回新的长度 2 ，并且原数组 nums 的前两个元素被修改为 1, 2 。不需要考虑数组中超出新长度后面的元素。

解题思路:
双指针法,两个指针分别从左0,右1开始,左边先不动,右指针一直往右移动.
1.当右指针所对应的值与左边一致时,左边不动.右边继续递增.
2.当右指针所对应的值与左边不一样时,左指针先右移1位.然后将右指针对应的值,赋给左指针所在位置,一直循环结束.
"""


class Solution:
    def removeDuplicates(self, nums):
        left = 0  # 左指针,从0开始
        for right in range(1, len(nums)):  # 右指针,从1开始,遍历到数组最后一个数
            if nums[left] == nums[right]:  # 相等
                right += 1  # 右指针继续右移,其他无操作
            else:  # 不相等
                left += 1  # 做指针右移
                nums[left] = nums[right]  # 把这个不相等的值,赋给左指针的位置,必然能把两个不相同的数之间的重复数干掉.
        return left + 1


ls = [0, 0, 1, 1, 1, 2, 2, 3, 3, 4]
print(Solution().removeDuplicates(nums=ls))
